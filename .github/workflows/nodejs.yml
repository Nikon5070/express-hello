name: Node CI

on:
  push:
    branches:
      - master
env:
  NAME_PROJECT: ${{ secrets.NAME_PROJECT }}
  DOCKER_REGISTY_LOGIN: ${{ secrets.DOCKER_REGISTY_LOGIN }}
  DOCKER_REGISTY_PASS: ${{ secrets.DOCKER_REGISTY_PASS }}
  AUTH_BASIC: ${{ secrets.AUTH_BASIC }}
  CONTAINER_TEST: "nikon5070/express-hello"
  CONTAINER_PROD: "nikon5070/express-hello:latest"
  HELM_PATH: "./k8s/exp-helm"

jobs:
  build:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - name: docker login
        run: |
          echo $DOCKER_REGISTY_PASS | docker login -u $DOCKER_REGISTY_LOGIN --password-stdin
      - name: build docker image
        run: |
          docker build -t ${CONTAINER_PROD} -f ./devops/Dockerfile .
      - name: push docker images in registy
        run: |
          docker push ${CONTAINER_PROD}
#      - name: pull docker images with registy
#        run: |
#          docker pull ${CONTAINER_PROD}_${GITHUB_SHA}

  helm:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - name: install
        run: |
          helm upgrade $NAME_PROJECT $HELM_PATH \
            --install \
            --set ingress.host=$NAME_PROJECT \
            --set image="${CONTAINER_PROD}"

#  prod-deploy:
#    needs: build
#    runs-on: self-hosted
#
#    steps:
#      - name: docker prod stack
#        run: |
#          docker stack deploy \
#            -c ./devops/docker-compose-prod.yml $NAME_PROJECT

#  clear-unused-docker-containers:
#    needs: prod-deploy
#    runs-on: self-hosted
#
#    steps:
#      - name: clear
#        run: |
#          bash ./devops/clean.sh
